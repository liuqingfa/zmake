// Generated by Flexc++ V1.08.00 on Mon, 10 Nov 2014 19:55:42 -0500

#ifndef wc_scanner_H_INCLUDED_
#define wc_scanner_H_INCLUDED_

// $insert baseclass_h
#include "wc_scannerbase.h"


// $insert classHead
class wc_scanner: public wc_scannerBase
{
	public:
		enum tokens {
			NUMBER,
			IDENTIFIER
		};
	public:
		explicit wc_scanner(std::istream &in = std::cin,
				std::ostream &out = std::cout);

		wc_scanner(std::string const &infile, std::string const &outfile);

		// $insert lexFunctionDecl
		int wc_lex();

	private:
		int lex__();
		int executeAction__(size_t ruleNr);

		void print();
		void preCode();     // re-implement this function for code that must 
		// be exec'ed before the patternmatching starts

		void postCode(PostEnum__ type);    
		// re-implement this function for code that must 
		// be exec'ed after the rules's actions.
};

// $insert scannerConstructors
inline wc_scanner::wc_scanner(std::istream &in, std::ostream &out)
	:
		wc_scannerBase(in, out)
{}

inline wc_scanner::wc_scanner(std::string const &infile, std::string const &outfile)
	:
		wc_scannerBase(infile, outfile)
{}

// $insert inlineLexFunction
inline int wc_scanner::wc_lex()
{
	return lex__();
}

inline void wc_scanner::preCode() 
{
	// optionally replace by your own code
}

inline void wc_scanner::postCode(PostEnum__ type) 
{
	// optionally replace by your own code
}

inline void wc_scanner::print() 
{
	print__();
}


#endif // wc_scanner_H_INCLUDED_

