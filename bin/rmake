#!/usr/bin/env python3

import argparse
import os
import subprocess

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
            description = 'Make a target in a directory recursively',
            formatter_class=argparse.ArgumentDefaultsHelpFormatter
            )
    parser.add_argument('-C', '--directory',
            type = str,
            default = '.',
            help = 'the directory to start the recursion with'
            )
    parser.add_argument(
            '--target',
            metavar = 'TARGET',
            type = str,
            help = 'the target to make, e.g., all, clean, install, etc.'
            )
    parser.add_argument(
            '-j',
            metavar = 'NUM',
            type = int,
            default = 1,
            help = 'make -j'
            )

    args = parser.parse_args()

    root_dir = os.path.realpath(args.directory)

    if not os.path.exists(root_dir):
        raise RuntimeError(root_dir + ' does not exist!')
    if not os.path.isdir(root_dir):
        raise RuntimeError(root_dir + ' is not a directory!')

    for root, dirs, files in os.walk(root_dir):
        for dir in dirs:
            dirname = os.path.join(root, dir)

            # Skip directories without makefiles
            makefile_list = [ 'makefile', 'Makefile' ]
            not_good = False
            for fname in makefile_list:
                if os.path.isfile(fname):
                    not_good = True
            if not_good:
                continue

            # Make the specified target
            cmdlist = [ 'make', '-C', dirname ]
            if args.target:
                cmdlist.append(args.target)
            if args.j > 1:
                cmdlist += [ '-j', str(args.j) ]
            print(subprocess.list2cmdline(cmdlist))
            subprocess.call(cmdlist)
